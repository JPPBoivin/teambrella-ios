<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
   <duplication lines="7" tokens="98">
      <file line="14"
            path="/Users/thorax/Developer/Teambrella/Teambrella-iOS/Teambrella/Scenes/Team/Claims/ClaimsCellBuilder.swift"/>
      <file line="23"
            path="/Users/thorax/Developer/Teambrella/Teambrella-iOS/Teambrella/Scenes/Team/Claims/ClaimsCellBuilder.swift"/>
      <codefragment><![CDATA[        if let cell = cell as? ClaimsOpenCell {
            cell.avatarView.kf.setImage(with: URL(string: service.server.avatarURLstring(for:claim.smallPhoto)),
                                        placeholder: #imageLiteral(resourceName: "imagePlaceholder"))
            cell.claimedAmountLabel.text = String(format: "%.2f", claim.claimAmount)
            cell.claimedTitleLabel.text = "CLAIMED"
            cell.titleLabel.text = claim.model
            cell.ownerAvatarView.kf.setImage(with: URL(string: service.server.avatarURLstring(for:claim.avatar)))]]></codefragment>
   </duplication>
   <duplication lines="9" tokens="90">
      <file line="40"
            path="/Users/thorax/Developer/Teambrella/Teambrella-iOS/Teambrella/Scenes/Sample/TeammateVC.swift"/>
      <file line="46"
            path="/Users/thorax/Developer/Teambrella/Teambrella-iOS/Teambrella/Scenes/Team/Members/TeammateProfileDataSource.swift"/>
      <codefragment><![CDATA[    private func loadEntireTeammate() {
        let key = Key(base58String: ServerService.Constant.fakePrivateKey, timestamp: service.server.timestamp)
        
        let body = RequestBodyFactory.teammateBody(key: key, id: teammate.userID)
        let request = TeambrellaRequest(type: .teammate, body: body, success: { [weak self] response in
            guard let me = self else { return }
            
            if case .teammate(let extendedTeammate) = response {
                me.teammate.extended = extendedTeammate]]></codefragment>
   </duplication>
   <duplication lines="21" tokens="76">
      <file line="12"
            path="/Users/thorax/Developer/Teambrella/Teambrella-iOS/Teambrella/View/BorderedButton.swift"/>
      <file line="12"
            path="/Users/thorax/Developer/Teambrella/Teambrella-iOS/Teambrella/View/PlainButton.swift"/>
      <codefragment><![CDATA[class BorderedButton: UIButton {
    @IBInspectable
    var borderColor: UIColor = .robinEggBlue {
        didSet {
            setup()
        }
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        setup()
    }

    func setup() {
        layer.masksToBounds = true
        layer.cornerRadius = 5]]></codefragment>
   </duplication>
</pmd-cpd>
